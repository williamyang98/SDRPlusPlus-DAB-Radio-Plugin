name: x86-windows

on:
  workflow_dispatch:
  push:
    branches: [ "master", "dev" ]

env:
  BUILD_TYPE: Release
  BUILD_DIR: build
  PACKAGE_DIR: build-out

jobs:
  skip_check:
    continue-on-error: false
    runs-on: ubuntu-22.04
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
    - id: skip_check
      uses: fkirc/skip-duplicate-actions@v5
      with:
        concurrent_skipping: 'same_content'
        cancel_others: 'true'
        skip_after_successful_duplicate: 'true'
        paths_ignore: '["**/README.md", "**/docs/**", "**/LICENSE.txt", "toolchains/ubuntu/*", "toolchains/macos/*"]'
        do_not_skip: '["workflow_dispatch", "schedule"]'

  build:
    needs: skip_check
    if: needs.skip_check.outputs.should_skip != 'true'

    runs-on: windows-2022
    strategy:
      matrix:
        architecture: ["sse2", "avx2" ]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Setup vcpkg with caching
      uses: friendlyanon/setup-vcpkg@v1
      with: 
        committish: 44a1e4eca5211434b5fefcc25a69bba246c3f861
        path: vcpkg

    - name: Install python mako
      run: python -m pip install mako

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/${{env.BUILD_DIR}} --preset windows-msvc-${{matrix.architecture}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE:STRING=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: Build
      run: cmake --build ${{github.workspace}}/${{env.BUILD_DIR}} --config ${{env.BUILD_TYPE}} --target dab_plugin

    - name: Create package
      shell: bash
      run: |
        mkdir -p ${{env.PACKAGE_DIR}} 
        cp ${{env.BUILD_DIR}}/src/*.dll ${{env.PACKAGE_DIR}}/
        cp README.md ${{env.PACKAGE_DIR}}/

    - name: Upload files (Release)
      uses: actions/upload-artifact@v4
      with:
        name: sdrpp_dab_radio_plugin_windows_${{matrix.architecture}}
        path: ${{github.workspace}}/${{env.PACKAGE_DIR}}
